# env
export HOMEBREW="/usr/local"
export EDITOR=nvim
export PATH=$HOME/.dotfiles/bin:$PATH
export CXXFLAGS="-I$HOMEBREW/include"
export LDFLAGS="-L$HOMEBREW/lib"
export CUDA_HOME=/usr/local/cuda
export DYLD_LIBRARY_PATH="$CUDA_HOME/lib:$CUDA_HOME:$CUDA_HOME/extras/CUPTI/lib"
export LD_LIBRARY_PATH="$DYLD_LIBRARY_PATH"
export JUMPDIR=~/Projects
# export PAGER=vimpager

# base16
BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

# syntax highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $HOME/.dotfiles/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# prompt
source $HOME/.dotfiles/zsh/zsh-git-prompt.sh
export PROMPT='%B%~%b$(git_super_status) %F{magenta}%#%F{reset} '

# aliases
alias vim=nvim
alias v=nvim
alias gs='git status -sb'
alias gcob='git checkout -b'
alias gco='git checkout'
alias gc='git commit -av'
alias gb='git branch'
alias gp='git push'
alias l='exa'

# complete
autoload -U compinit && compinit
autoload -U bashcompinit && bashcompinit

# jump
j() {
  cd "$JUMPDIR/${1:-}"
}
compctl -/ -W "$JUMPDIR" j

# find and replace in directory
replace-in-dir() {
  ag -l "$1" | xargs sed -i '' -e "s/$1/$2/g"
}

# history
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^[[A" history-beginning-search-backward-end
bindkey "^[[B" history-beginning-search-forward-end

# command + left/right
bindkey "^[a" beginning-of-line
bindkey "^[e" end-of-line

# option + left/right
bindkey "^[^[[C" forward-word
bindkey "^[^[[D" backward-word

# option + delete
bindkey "^[d" backward-kill-word

# fzf & ripgrep
export FZF_DEFAULT_COMMAND='rg --files --hidden --smart-case --follow --glob "!.git/*"'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ruby
if `which rbenv > /dev/null`; then eval "$(rbenv init -)"; fi

# yarn
export PATH="$HOME/.yarn/bin:$PATH"

# kubectl
source <(kubectl completion zsh)

# go
export GOPATH="$HOME/Projects/go"
export GOBIN="$GOPATH/bin"
export PATH="$GOBIN:$PATH"
export GO111MODULE=on

# rustup
if [ -f "$HOME/.cargo/env" ]; then source $HOME/.cargo/env; fi

# nvm
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/alexkern/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/alexkern/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/alexkern/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/alexkern/google-cloud-sdk/completion.zsh.inc'; fi

# Run local zshrc
if [[ -f "$HOME/.zshrc.local" ]]; then . "$HOME/.zshrc.local"; fi
